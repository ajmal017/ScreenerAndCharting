This screener maninly works around DB stored in stock_db.sqlite. This has to be updated.

Files:
======
Lets get acquantied with files,

	Source Code files
	-----------------
		1. BS_get_and_decode_webpage.py : contains fetching and decoding data from business std website.
		2. BS_json_extract.py : Decodes data_BS.json to get SYMBOL, CompanyName, CompId, compFormat, linkId
		3. common_code.py : Contains most of the variables like current_qtr name, DB indexes, start index for DB update etc.
		4. DB_api.py: APIs for reading and updating DB. Actual DB update happens in BS_get_and_decode_webpage.py
					  DB_api.py initiates the update using  BS_get_and_decode_webpage.updateCompleteDataBase()
					  DB_Details() is used to print statistical info of DBs
		5. google_json_extract.py : extracts json data saved from google screener to panda data frame.
		6. screener.py : has a GUI to enter EPS growth parameters to filter stocks. Also has functions to 
						 to read cash flow, promotor holdings etc. some of them get it from website and some apis get
						 data from DB. Needs imporvement for this.
	
	Data files
	----------
		1. data_BS.json : contains SYMBOL, CompanyName, CompId, compFormat, linkId.
		2. NIFTYAllStocks.txt : json file having all the nifty stocks downloaded from google screener.
		3. stock_db.sqlite : Data base for yearly and quarterly figures.

getCompleteReport functino is obselete, but some exlanations of internal funcion are valid. Will revisit later.
def getCompleteReport(EPSY1, EPSY2, EPSY3, EPSCurrQtr, EPSQtrAlone):
	-> uses class google_sceerner_json_DataExtract to convert JSON data(eg: NIFTYAllStocks.txt) to list of stocks symbols
	-> it is then written to a 'google-data.csv file.
	-> parses through this big list(currently around 1800) of stocks and calls getEPG(stockSymbol, 0)
		-> def getEPSG(stockSymbol, consolidated):
			-> calls cf = compFormat_bussinesStd(stockSymbol). This is a class with works on the another json file downloaded from Bussiness Standard
			   website. Basically it converts the stockSymbol to a linkID with is used to fetch the data from BS web site.
			-> calls cf.get_compFormat() to get the corresponding linkID. Once success the linkID is in cf.result.
			-> now initialises the class  report = getData_bussinesStd(cf.result, reportType). This is a class responsible to fetch data from BS web site.
			-> calls report.getEPSdata(). 
				-> reads EPS data from two quarterly links
				-> reads EPS data from two yearly links
				-> Minimum 4 reads. There are few error cases in which case it tries another link.
		-> compare with eps data with filter criteria and put it in proper list.
			textFile = open("FirstReport.txt", "w")
			metStocks_CANSLIM = []    
			metStocks_4qtrs = []
			metStocks_3qtrs = []
			failedStocks = []
			All this data can be find in FirstReport.txt

How to update data_BS.json file?
Answer:
	1. Go to setting in google chrome and open developer options.
	2. Go to Network tab. Search "json" in search box available.
	3. Right click and copy link address of get-company-json.
	4. Do a wget and link address in linux shell prompt.
		here is the link https://www.business-standard.com/api-handler/article/get-company-json .
		If this link is not working it might have got depricated.
	5. copy the initial portion from the old .json file and prepend it with the downloaded file.
	6. Also remember to close the } bracket.
	7. cat get-company-json | json_pp > data_BS_new.json

How to update new NIFTYALLStocks.txt ?
Answer:
	1. go to google screener.
	2. If you are looged in, log out. And if you are logged out, log int to google account. Otherwise indian markets won't work. Strange!!!
	3. Go to setting in google chrome and open developer options.
	4. Go to Network tab. Search "json in search box available.
	5. Copy link and modify the number of stocks from 20 to the total showing,
		original:  https://www.google.com/finance?output=json&start=0&num=20&noIL=1&q=[cur
		modified:  https://www.google.com/finance?output=json&start=0&num=1850&noIL=1&q=[cur
	6. Save and replace NIFTYALLSTocks.txt

How to update yearly and quarterly data base from website?
Answer:
	run command updateDB() in DB_api.py.
